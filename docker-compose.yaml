version: '3.8'

services:
  db:
    build: .docker/postgres
    restart: always
    tty: true
    container_name: ${POSTGRES_HOST}
    volumes:
      - .docker/dbdata:/var/lib/postgresql/data
    ports:
      - '${POSTGRES_PORT}:5432'
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASS}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_NAME}
    networks:
      - postgres

  redis:
    image: 'redis:alpine3.14'
    restart: always
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./.docker/redisdata:/data
    ports:
      - '${REDIS_PORT}:6379'
    networks:
      - postgres

  nginx:
    build:
      context: .
    restart: always
    container_name: nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./.docker/certbot/conf:/etc/letsencrypt
      - ./.docker/certbot/www:/var/www/certbot
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  certbot:
    image: certbot/certbot
    volumes:
      - ./.docker/certbot/conf:/etc/letsencrypt
      - ./.docker/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

networks:
  postgres:
    driver: 'bridge'
